# Tipos

### üî¢ **Tipos Num√©ricos Inteiros**

| Tipo        | Tamanho (m√≠nimo) | Faixa (em sistemas t√≠picos 32/64 bits)                 |
| ----------- | ---------------- | ------------------------------------------------------ |
| `char`      | 1 byte           | -128 a 127 (`signed`) ou 0 a 255 (`unsigned`)          |
| `short`     | 2 bytes          | -32.768 a 32.767 (`signed`)                            |
| `int`       | 4 bytes          | -2.147.483.648 a 2.147.483.647                         |
| `long`      | ‚â• 4 bytes        | Varia conforme a plataforma                            |
| `long long` | ‚â• 8 bytes        | -9.223.372.036.854.775.808 a 9.223.372.036.854.775.807 |

Para cada um acima, voc√™ pode usar a vers√£o **`unsigned`**.

---

### üî° **Tipo de Caracteres**

| Tipo      | Descri√ß√£o                                        |
| --------- | ------------------------------------------------ |
| `char`    | Um √∫nico caractere (`'a'`, `'9'`, etc.)          |
| `wchar_t` | Caractere largo (Unicode, depende da plataforma) |

---

### üî£ **Tipos de Ponto Flutuante**

| Tipo          | Tamanho   | Precis√£o                                       |
| ------------- | --------- | ---------------------------------------------- |
| `float`       | 4 bytes   | \~6-7 d√≠gitos decimais                         |
| `double`      | 8 bytes   | \~15 d√≠gitos decimais                          |
| `long double` | ‚â• 8 bytes | Pode ter mais precis√£o (depende da plataforma) |

---

### ‚úÖ **Tipos Booleanos (C99)**

C n√£o possui o tipo boolean nativamente, em vez disso apenas use 0 1
| Tipo    | Descri√ß√£o                                  |
| ------- | ------------------------------------------ |
| `_Bool` | Representa `0` (falso) ou `1` (verdadeiro) |
| `bool`  | (via `<stdbool.h>`)                        |

---

### üß± **Tipos Derivados**

| Tipo                 | Descri√ß√£o                          |
| -------------------- | ---------------------------------- |
| `array`              | Cole√ß√£o de elementos do mesmo tipo |
| `struct`             | Estrutura de dados personalizada   |
| `union`              | Compartilha espa√ßo entre membros   |
| `enum`               | Enumera√ß√£o de constantes inteiras  |
| `pointer` (`int *p`) | Ponteiro para um tipo              |
| `function`           | Prot√≥tipo de fun√ß√£o (`int f(int)`) |

---

### üß© **Modificadores de Tipo**

| Modificador | Aplica√ß√£o                                     |
| ----------- | --------------------------------------------- |
| `signed`    | Permite n√∫meros negativos (padr√£o na maioria) |
| `unsigned`  | Apenas n√∫meros positivos                      |
| `short`     | Menor que `int`                               |
| `long`      | Maior que `int`                               |
| `const`     | Valor constante                               |
| `volatile`  | Pode mudar fora do controle do programa       |
| `static`    | Persiste entre chamadas                       |
| `extern`    | Declarado em outro arquivo                    |
| `register`  | Sugest√£o para uso em registradores            |

---

 
